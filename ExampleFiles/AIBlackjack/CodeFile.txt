float random;
int cardValue;

float floorCounter;
func(FloorCard)
{
	floorCounter = 0.0;

	while(floorCounter < 1)
	{
		if(random >= floorCounter)
		{
			cardValue = cardValue + 1;
		};

		floorCounter = floorCounter + (1/13);
	};

	if(cardValue >= 10)
	{
		cardValue = 10;
	};

	if(cardValue < 1)
	{
		cardValue = 1;
	};

	floorCounter = 0.0;
};

func(DrawCard)
{
	cardValue = 0;

	rnd(random);
	call(FloorCard);

	random = 0.0;
};

string topRow1;
string midRow1;
string botRow1;

string topRow2;
string midRow2;
string botRow2;

topRow1 = "";
midRow1 = "";
botRow1 = "";

topRow2 = "";
midRow2 = "";
botRow2 = "";

string midValue;
midValue = "";

int scoreTotalP1;
scoreTotalP1 = 0;

int scoreTotalP2;
scoreTotalP2 = 0;

bool P1Turn;
P1Turn = false;

bool hasStart;
hasStart = false;

func(PrintRows)
{
	print("");
	if(P2HasQuit|| scoreTotalP2 == 21)
	{
		print("  CPU <Stands>");
	};
	if(!P2HasQuit && scoreTotalP2 < 21)
	{
		print("  CPU");
	};
	if(scoreTotalP2 > 21)
	{
		print("  CPU <Bust>");
	};
	print("  " + topRow2);
	print("  " + midRow2 + " = " + scoreTotalP2);
	print("  " + botRow2);
	print("┌─┐");
	print("│@│");
	print("└─┘");
	print("  " + topRow1);
	print("  " + midRow1 + " = " + scoreTotalP1);
	print("  " + botRow1);
	if(P1HasQuit || scoreTotalP1 == 21)
	{
		print("  Player <Stands>");
	};
	if(!P1HasQuit && scoreTotalP1 < 21)
	{
		print("  Player");
	};
	if(scoreTotalP1 > 21)
	{
		print("  Player <Bust>");
	};
	print("");
};

func(SetCards)
{

	if(cardValue == 1)
	{
		midValue = "A";
	};
	if(cardValue == 10)
	{
		rnd(random);

		if(random <= (1/4))
		{
			midValue = "T";
		};
		if(random <= (2/4) && random > (1/4))
		{
			midValue = "J";
		};
		if(random <= (3/4) && random > (2/4))
		{
			midValue = "Q";
		};
		if(random > (3/4))
		{
			midValue = "K";
		};
	};
	if(cardValue != 1 && cardValue != 10)
	{
		midValue = "" + cardValue;
	};

	if(P1Turn)
	{
		topRow1 = topRow1 + "┌─┐ ";
		midRow1 = midRow1 + "│" + midValue + "│ ";
		botRow1 = botRow1 + "└─┘ ";

		scoreTotalP1 = scoreTotalP1 + cardValue;
		cardValue = 0;
	};
	if(!P1Turn)
	{
		topRow2 = topRow2 + "┌─┐ ";
		midRow2 = midRow2 + "│" + midValue + "│ ";
		botRow2 = botRow2 + "└─┘ ";

		scoreTotalP2 = scoreTotalP2 + cardValue;
		cardValue = 0;
	};

	if(hasStart)
	{
		call(PrintRows);
	};
};

func(StartDeal)
{
	P1Turn = true;

	call(DrawCard);
	call(SetCards);

	call(DrawCard);
	call(SetCards);

	P1Turn = false;

	call(DrawCard);
	call(SetCards);

	call(DrawCard);
	call(SetCards);

	P1Turn = true;
};

string acceptAnswer;
bool P1HasQuit;
bool P2HasQuit;

P1HasQuit = false;
P2HasQuit = false;

float AIRisk;
rnd(AIRisk);
float chanceOfFail;
int needValue;

print("AI blackjack!");
print("House rules:");
print(">Aces are low");
print(">Card deck is infinite");
acceptAnswer = "";

func(AI)
{
	needValue = 21 - scoreTotalP2;
	acceptAnswer = "";

	if(scoreTotalP2 == 21 || (scoreTotalP1 < scoreTotalP2 && P1HasQuit))
	{
		acceptAnswer = "S";
	};

	if(needValue >= 10)
	{
		acceptAnswer = "H";
	};

	if(needValue < 10)
	{
		chanceOfFail = 1-(needValue/13);
		if(chanceOfFail > AIRisk)
		{
			acceptAnswer = "S";
		};		

		if(chanceOfFail <= AIRisk || scoreTotalP2 <= scoreTotalP1)
		{
			acceptAnswer = "H";
		};
	};

};

call(StartDeal);
hasStart = true;
call(PrintRows);

bool canLeave;
while(scoreTotalP1 <= 21 && scoreTotalP2 <= 21 && (!P2HasQuit || !P1HasQuit))
{
	if(!P1HasQuit)
	{
		canLeave = false;
		P1Turn = true;

		while(!canLeave)
		{
			print("Stand or Hit? S or H");
			input(acceptAnswer);

			if(acceptAnswer == "S")
			{
				print("Player stands!");
				P1HasQuit = true;
				canLeave = true;
			};
			if(acceptAnswer == "H")
			{
				print("Player hits!");
				call(DrawCard);
				call(SetCards);
				canLeave = true;
			};
			if(acceptAnswer != "S" && acceptAnswer != "H")
			{
				print("Please enter S to stand or H to hit");
			};
		};

		if(scoreTotalP1 == 21)
		{
			P1HasQuit = true;
		};
	};
	if(!P2HasQuit && scoreTotalP1 <= 21)
	{
		P1Turn = false;

		call(AI);
		if(acceptAnswer == "S")
		{
			print("CPU stands");
			P2HasQuit = true;
		};
		if(acceptAnswer == "H")
		{
			print("CPU hits");
			call(DrawCard);
			call(SetCards);
		};

		if(scoreTotalP2 == 21)
		{
			P2HasQuit = true;
		};
	};
};


if(scoreTotalP1 <= 21 && scoreTotalP2 <= 21)
{
	if(scoreTotalP1 > scoreTotalP2)
	{
		print("Player wins!");
	};
	if(scoreTotalP1 < scoreTotalP2)
	{
		print("CPU wins!");
	};
	if(scoreTotalP1 == scoreTotalP2)
	{
		print("Draw!");
	};
};

if(scoreTotalP1 > 21)
{
	print("Player bust! CPU wins!");
};
if(scoreTotalP2 > 21)
{
	print("CPU bust! Player wins!");
};